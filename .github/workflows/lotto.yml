name: Lotto Crawler

on:
  schedule:
    - cron: '0 22 * * 6'  # 매주 토요일 22:00
    - cron: '0 23 * * 6'  # 매주 토요일 23:00
  workflow_dispatch:  # 수동 실행 가능

jobs:
  crawl:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run crawler
      run: python src/crawler.py --latest
    
    - name: Generate commit message
      id: commit-msg
      run: |
        # 최신 회차 정보 파일 찾기
        LATEST_FILE=$(ls -t lotto/draws/lotto_*.json | head -n 1)
        if [ -f "$LATEST_FILE" ]; then
          # JSON 파일에서 필요한 정보 추출
          DRAW_NO=$(jq -r '.draw_no' "$LATEST_FILE")
          DRAW_DATE=$(jq -r '.draw_date' "$LATEST_FILE")
          NUMBERS=$(jq -r '.numbers | join(",")' "$LATEST_FILE")
          BONUS=$(jq -r '.bonus_number' "$LATEST_FILE")
          STORE_COUNT=$(jq -r '.first_prize_store_info | length' "$LATEST_FILE")
          
          # 커밋 메시지 생성
          if [ "$STORE_COUNT" -gt 0 ]; then
            echo "message=로또 ${DRAW_NO}회차 업데이트 (${DRAW_DATE}) - 당첨번호: ${NUMBERS} + ${BONUS}, 1등 당첨점: ${STORE_COUNT}곳" >> $GITHUB_OUTPUT
          else
            echo "message=로또 ${DRAW_NO}회차 업데이트 (${DRAW_DATE}) - 당첨번호: ${NUMBERS} + ${BONUS}" >> $GITHUB_OUTPUT
          fi
        else
          echo "message=로또 데이터 업데이트" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add lotto/
        git diff --quiet && git diff --staged --quiet || (git commit -m "${{ steps.commit-msg.outputs.message }}" && git push) 